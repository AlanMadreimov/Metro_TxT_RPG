<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 YaBrowser/25.4.0.0 Safari/537.36" version="27.1.6">
  <diagram id="pqbc91mAlIcmljudpYJ5" name="Game">
    <mxGraphModel dx="1895" dy="2165" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1654" pageHeight="1169" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-1" value="utils" style="swimlane;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="340" y="200" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-2" value="" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="5Z6LL0dOkFgTwms2IkeJ-1" vertex="1">
          <mxGeometry y="20" width="200" height="90" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-3" value="+ Trim(std::string&amp;amp; str): void&lt;div&gt;+ ClearConsole() : void&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="5Z6LL0dOkFgTwms2IkeJ-1" vertex="1">
          <mxGeometry y="110" width="200" height="90" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=none;startFill=1;startArrow=diamondThin;targetPerimeterSpacing=0;endSize=6;startSize=14;" parent="1" source="5Z6LL0dOkFgTwms2IkeJ-6" target="5Z6LL0dOkFgTwms2IkeJ-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=none;startFill=0;" parent="1" source="5Z6LL0dOkFgTwms2IkeJ-4" target="5Z6LL0dOkFgTwms2IkeJ-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-4" value="Game" style="swimlane;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="680" y="160" width="360" height="500" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-5" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;-asset_manager_: AssetManager&lt;br/&gt;-character_: Character&lt;br/&gt;-game_running_: bool&lt;br/&gt;-save_file_: std::string&lt;br/&gt;-game_completed_: bool = false&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="5Z6LL0dOkFgTwms2IkeJ-4" vertex="1">
          <mxGeometry y="20" width="360" height="130" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-6" value="&lt;div&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+Game()&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+Sleep(): void&lt;br&gt;+Gym(): void&lt;br&gt;+Start(): void&lt;br&gt;+MainMenu(): void&lt;br&gt;+CreateCharacter(): void&lt;br&gt;+LoadCharacter(): void&lt;br&gt;+GameLoop(): void&lt;br&gt;+ShowStatus(): void const&lt;br&gt;+Explore(): void&lt;br&gt;+Battle(enemy_data: const AssetManager::EnemyData&amp;amp;): void&lt;br&gt;+Shop(): void&lt;br&gt;+SaveGame(): void&lt;br&gt;+ShowClassHistory(character_class: const std::string&amp;amp;): void&lt;br&gt;+ResetCharacter(): void&lt;br&gt;+Dead(): void&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt; -PrintMenu(title: const std::string&amp;amp;, options: const std::vector&amp;lt;std::string&amp;gt;&amp;amp;): void const&lt;br/&gt;-GetChoice(min: int, max: int): int const&lt;br/&gt;-WaitForInput(): void const&lt;br/&gt;-FinalBossBattle(): void&lt;br/&gt;-ShowEnding(): void&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="5Z6LL0dOkFgTwms2IkeJ-4" vertex="1">
          <mxGeometry y="150" width="360" height="350" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-8" value="Character" style="swimlane;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1340" y="190" width="360" height="780" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-9" value="&lt;div&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;-name_: std::string&lt;br/&gt;-class_: std::string&lt;br/&gt;-level_: int&lt;br/&gt;-health_: int&lt;br/&gt;-max_health_: int&lt;br/&gt;-attack_: int&lt;br/&gt;-defense_: int&lt;br/&gt;-gold_: int&lt;br/&gt;-experience_: int&lt;br/&gt;-experience_to_next_level_: int&lt;br/&gt;-inventory_: std::map&amp;lt;std::string, int&amp;gt;&lt;br/&gt;-permanent_attack_bonus_: int = 0&lt;br/&gt;-permanent_defense_bonus_: int = 0&lt;br/&gt;-purchased_upgrades_: std::vector&amp;lt;std::string&amp;gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="5Z6LL0dOkFgTwms2IkeJ-8" vertex="1">
          <mxGeometry y="20" width="360" height="240" as="geometry" />
        </mxCell>
        <mxCell id="5Z6LL0dOkFgTwms2IkeJ-10" value="&lt;div&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+Character()&lt;br&gt;+Character(file_path: const std::string&amp;amp;)&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+LoadCharacterClasses(): void&lt;br&gt;+LoadFromFile(file_path: const std::string&amp;amp;): bool&lt;br&gt;+SaveToFile(file_path: const std::string&amp;amp;): bool const&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+GetLevel(): int const&lt;br&gt;+GetHealth(): int const&lt;br&gt;+GetMaxHealth(): int const&lt;br&gt;+GetAttack(): int const&lt;br&gt;+GetDefense(): int const&lt;br&gt;+GetGold(): int const&lt;br&gt;+GetExperience(): int const&lt;br&gt;+GetName(): const std::string&amp;amp; const&lt;br&gt;+GetClass(): const std::string&amp;amp; const&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+SetName(name: const std::string&amp;amp;): void&lt;br&gt;+SetClass(character_class: const std::string&amp;amp;): void&lt;br&gt;+AddHealth(value: int): void&lt;br&gt;+AddGold(value: int): void&lt;br&gt;+AddExperience(value: int): void&lt;br&gt;+LevelUp(): void&lt;br&gt;+SetMaxHp(value: int): void&lt;br&gt;+SetAttack(value: int): void&lt;br&gt;+SetDefense(value: int): void&lt;br&gt;+SetGold(value: int): void&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+AddItem(item: const std::string&amp;amp;, quantity: int = 1): void&lt;br&gt;+UseItem(item: const std::string&amp;amp;): bool&lt;br&gt;+GetItemCount(item: const std::string&amp;amp;): int const&lt;br&gt;+GetInventory(): const std::map&amp;lt;std::string, int&amp;gt;&amp;amp; const&lt;br&gt;+HasItem(item: const std::string&amp;amp;): bool const&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+AddPermanentAttackBonus(value: int): void&lt;br&gt;+AddPermanentDefenseBonus(value: int): void&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;-LoadClass(character_class: const std::string&amp;amp;): void&lt;br/&gt;-CalculateStats(): void&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="5Z6LL0dOkFgTwms2IkeJ-8" vertex="1">
          <mxGeometry y="260" width="360" height="520" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-1" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; font-weight: 400; text-align: start; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;Asset Manager&lt;/pre&gt;" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1000" y="-710" width="320" height="600" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-2" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+{struct} ShopItemData&lt;br&gt;+{struct} EnemyData&lt;br&gt;+{struct} CharacterClassData&lt;br&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;-character_classes_: std::map&amp;lt;std::string, CharacterClassData&amp;gt;&lt;br&gt;-texts_: std::map&amp;lt;std::string, std::string&amp;gt;&lt;br&gt;-menus_: std::map&amp;lt;std::string, std::vector&amp;lt;std::string&amp;gt;&amp;gt;&lt;br&gt;-numeric_: std::map&amp;lt;std::string, int&amp;gt;&lt;br&gt;-shop_items_: std::vector&amp;lt;ShopItemData&amp;gt;&lt;br&gt;-enemies_: std::vector&amp;lt;EnemyData&amp;gt;&lt;br&gt;-boss_data_: EnemyData&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;-CreateDefaultShopItems(): void&lt;br/&gt;-CreateDefaultEnemies(): std::vector&amp;lt;EnemyData&amp;gt;&lt;br/&gt;-CreateDefaultBoss(): void&lt;/pre&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="D17Lju54LTFswloqiZzQ-1">
          <mxGeometry y="20" width="320" height="310" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-3" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+AssetManager()&lt;br&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+GetRandomEnemy(player_level: int): EnemyData&lt;br&gt;+GetBossData(): EnemyData&lt;br&gt;+LoadEnemyData(): void&lt;br&gt;+LoadBossData(): void&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+GetShopItems(): const std::vector&amp;lt;ShopItemData&amp;gt;&amp;amp;&lt;br&gt;+LoadShopItems(): void&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+LoadTextData(): void&lt;br&gt;+LoadMenuData(): void&lt;br&gt;+GetText(key: const std::string&amp;amp;): const std::string&amp;amp;&lt;br&gt;+GetMenu(menu_name: const std::string&amp;amp;): const std::vector&amp;lt;std::string&amp;gt;&amp;amp;&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+LoadCharacterClasses(): void&lt;br&gt;+GetCharacterClasses(): std::map&amp;lt;std::string, CharacterClassData&amp;gt;&lt;br&gt;+LoadNumericData(): void&lt;br&gt;+GetNum(key: const std::string&amp;amp;): int&lt;/pre&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;br&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="D17Lju54LTFswloqiZzQ-1">
          <mxGeometry y="330" width="320" height="270" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=diamondThin;endFill=1;endSize=14;" edge="1" parent="1" source="D17Lju54LTFswloqiZzQ-4" target="D17Lju54LTFswloqiZzQ-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-4" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; font-weight: 400; text-align: start; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;Character Class Data&lt;/pre&gt;" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1410" y="-480" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-5" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+base_attack: int&lt;br/&gt;+base_defense: int&lt;br/&gt;+base_health: int&lt;br/&gt;+starting_gold: int&lt;br/&gt;+starting_items: std::map&amp;lt;std::string, int&amp;gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="D17Lju54LTFswloqiZzQ-4">
          <mxGeometry y="20" width="200" height="180" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-7" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; font-weight: 400; text-align: start; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;Shop Item Data&lt;/pre&gt;" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="660" y="-770" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-8" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+name: std::string&lt;br/&gt;+price: int&lt;br/&gt;+attack_bonus: int&lt;br/&gt;+defense_bonus: int&lt;br/&gt;+is_permanent: bool&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="D17Lju54LTFswloqiZzQ-7">
          <mxGeometry y="20" width="200" height="180" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-10" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; font-weight: 400; text-align: start; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;Enemy Data&lt;/pre&gt;" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="660" y="-390" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-11" value="&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;+name: std::string&lt;br&gt;+base_health: int&lt;br&gt;+base_attack: int&lt;br&gt;+base_defense: int&lt;br&gt;+exp_reward: int&lt;br&gt;+gold_reward: int&lt;br&gt;+level: int &lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="D17Lju54LTFswloqiZzQ-10">
          <mxGeometry y="20" width="200" height="180" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0;entryDx=0;entryDy=0;endArrow=diamondThin;endFill=1;endSize=14;" edge="1" parent="1" target="D17Lju54LTFswloqiZzQ-1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="860" y="-615" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;endArrow=diamondThin;endFill=1;endSize=14;" edge="1" parent="1" source="D17Lju54LTFswloqiZzQ-11" target="D17Lju54LTFswloqiZzQ-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="D17Lju54LTFswloqiZzQ-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=1;exitDx=0;exitDy=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;endArrow=diamondThin;endFill=1;endSize=15;" edge="1" parent="1" source="D17Lju54LTFswloqiZzQ-3" target="5Z6LL0dOkFgTwms2IkeJ-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
